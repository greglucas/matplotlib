name: Test upcoming dependencies

on:
  push
  # schedule:
  #   - cron: "47 3 * * 6"

env:
  NO_AT_BRIDGE: 1  # Necessary for GTK3 interactive test.
  OPENBLAS_NUM_THREADS: 1
  PYTHONFAULTHANDLER: 1

jobs:
  test:
    name: "Python ${{ matrix.python-version }}"
    runs-on: ubuntu-latest
    permissions:
      issues: write
    # if: github.repository == 'matplotlib/matplotlib'

    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.9", "3.10"]

    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install OS dependencies
        run: |
          sudo apt-get update -yy
          sudo apt-get install -yy \
            ccache \
            cm-super \
            dvipng \
            ffmpeg \
            fonts-noto-cjk \
            gdb \
            gir1.2-gtk-3.0 \
            graphviz \
            inkscape \
            lcov \
            libcairo2 \
            libcairo2-dev \
            libffi-dev \
            libgeos-dev \
            libgirepository1.0-dev \
            libopengl0 \
            libsdl2-2.0-0 \
            libxkbcommon-x11-0 \
            libxcb-icccm4 \
            libxcb-image0 \
            libxcb-keysyms1 \
            libxcb-randr0 \
            libxcb-render-util0 \
            libxcb-xinerama0 \
            lmodern \
            fonts-freefont-otf \
            texlive-pictures \
            pkg-config \
            qtbase5-dev \
            texlive-fonts-recommended \
            texlive-latex-base \
            texlive-latex-extra \
            texlive-latex-recommended \
            texlive-luatex \
            texlive-xetex \
            ttf-wqy-zenhei

      - name: Install Python dependencies
        run: |
          # Upgrade pip and setuptools and wheel to get as clean an install as
          # possible.
          python -m pip install --upgrade pip setuptools wheel

          # Install dependencies from PyPI.
          python -m pip install --upgrade $PRE \
            cycler fonttools kiwisolver packaging pillow pyparsing \
            python-dateutil setuptools-scm \
            -r requirements/testing/all.txt \
            -r requirements/testing/extra.txt

          # Install optional dependencies from PyPI.
          # Sphinx is needed to run sphinxext tests
          python -m pip install --upgrade sphinx

          # GUI toolkits are pip-installable only for some versions of Python
          # so don't fail if we can't install them.  Make it easier to check
          # whether the install was successful by trying to import the toolkit
          # (sometimes, the install appears to be successful but shared
          # libraries cannot be loaded at runtime, so an actual import is a
          # better check).
          # PyGObject, pycairo, and cariocffi do not install on OSX 10.12.
           python -m pip install --upgrade pycairo 'cairocffi>=0.8' PyGObject &&
             python -c 'import gi; gi.require_version("Gtk", "3.0"); from gi.repository import Gtk' &&
             echo 'PyGObject is available' ||
             echo 'PyGObject is not available'

          # There are no functioning wheels available for OSX 10.12 (as of
          # Sept 2020) for either pyqt5 (there are only wheels for 10.13+) or
          # pyside2 (the latest version (5.13.2) with 10.12 wheels has a
          # fatal to us bug, it was fixed in 5.14.0 which has 10.13 wheels)
          python -mpip install --upgrade pyqt5 &&
            python -c 'import PyQt5.QtCore' &&
            echo 'PyQt5 is available' ||
            echo 'PyQt5 is not available'
          python -mpip install --upgrade pyqt6 &&
            python -c 'import PyQt6.QtCore' &&
            echo 'PyQt6 is available' ||
            echo 'PyQt6 is not available'
          python -mpip install --upgrade pyside6 &&
            python -c 'import PySide6.QtCore' &&
            echo 'PySide6 is available' ||
            echo 'PySide6 is not available'

          python -mpip install --upgrade \
            -f "https://extras.wxpython.org/wxPython4/extras/linux/gtk3/ubuntu-20.04" \
            wxPython &&
            python -c 'import wx' &&
            echo 'wxPython is available' ||
            echo 'wxPython is not available'

      - name: Install the nightly dependencies
        run: |
          python -m pip install -i https://pypi.anaconda.org/scipy-wheels-nightly/simple --upgrade numpy pandas

      - name: Install Matplotlib
        run: |
          git describe

          # All dependencies must have been pre-installed, so that the minver
          # constraints are held.
          python -m pip install --no-deps -e .

      - name: Run pytest
        run: |
          xvfb-run -a python -mpytest -raR -n auto \
            --maxfail=50 --timeout=300 --durations=25 --log-level=DEBUG \
            -W error::UserWarning

      - uses: actions/upload-artifact@v2
        if: failure()
        with:
          name: "${{ matrix.python-version }} ${{ matrix.os }} ${{ matrix.name-suffix }} result images"
          path: ./result_images

      - name: Create issue on failure
        uses: imjohnbo/issue-bot@v3
        if: failure()
        with:
          title: "[TST] Upcoming dependency test failures"
          body: |
            The weekly build with nightly wheels from numpy and pandas
            has failed. Check the logs for any updates that need to be
            made in matplotlib.

          pinned: false
          close-previous: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
